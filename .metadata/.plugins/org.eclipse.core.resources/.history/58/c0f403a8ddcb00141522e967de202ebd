
	/**
	 * Constructor for the <code>Record</code> class. 
	 * 
	 * @param title <code>String</code> containing title of listing 
	 * @param similarity <code>int</code> containing similarity between listings 
	 * @throws IndexException if <code>isNull(title) OR isEmpty(title) OR 
	 * similarity < 0</code>
	 */
	public Record(String title, int similarity) throws IndexException {
		if (nullOrEmpty(title)) {
			throw new IndexException("Invalid title argument");
		}
		if (similarity<0) {
			throw new IndexException("Invalid similarity argument");
		}
		this.title = title;
		this.similarity = similarity;
	}

	/* (non-Javadoc)
	 * @see java.lang.Comparable#compareTo(java.lang.Object)
	 */
	@Override
	public int compareTo(Record r) {
		int difference = this.similarity-r.similarity;
		if (difference>0) {
			return 1; 
		} else if (difference==0) {
			return 0; 
		} else {
			return -1;
		}
	}

	/* (non-Javadoc)
	 * @see asgn1Index.AbstractRecord#getSimilarity()
	 */
	@Override
	public int getSimilarity() {
		return similarity;
	}

	/* (non-Javadoc)
	 * @see asgn1Index.AbstractRecord#getTitle()
	 */
	@Override
	public String getTitle() {
		return title;
	} 	
	
	/**
	 * Helper method to simplify tests for null or empty strings 
	 * 
	 * @param str <code>String</code> to be tested 
	 * @return <code>true</code> if <code>isNull(str) OR isEmpty(str)</code>
	 */
	private boolean nullOrEmpty(String str) {
		return (str==null)||(str.isEmpty());
	}
}
